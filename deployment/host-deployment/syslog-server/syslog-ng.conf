#############################################################################
# Default syslog-ng.conf file which collects all local logs into a
# single file called /var/log/messages tailored to container usage.
#
# The changes from the stock, default syslog-ng.conf file is that we've
# dropped the system() source that is not needed and that we enabled network
# connections using default-network-drivers(). Customize as needed and
# override using the -v option to docker, such as:
#
#  docker run ...  -v "$PWD/syslog-ng.conf":/etc/syslog-ng/syslog-ng.conf
#

@version: 3.29
@include "scl.conf"

options{
       use_dns(yes);
};

source s_local {
	internal();
};

source s_network {
	default-network-drivers(
		# NOTE: TLS support
		#
		# the default-network-drivers() source driver opens the TLS
		# enabled ports as well, however without an actual key/cert
		# pair they will not operate and syslog-ng would display a
		# warning at startup.
		#
		#tls(key-file("/path/to/ssl-private-key") cert-file("/path/to/ssl-cert"))
	);
};

destination d_local {
	file("/var/log/messages");
	file("/var/log/messages-kv.log" template("$ISODATE $HOST $(format-welf --scope all-nv-pairs)\n") frac-digits(3));
};

destination d_logs {
        file(
            "/var/log/syslog-ng/logs.txt"
            ); 
};

destination d_mongodb {
    mongodb(
        uri("mongodb://localhost:27017/detectors")
        collection("messages")
        value-pairs(
            scope("selected-macros" "nv-pairs" "sdata")
        )
    );
};

#source remote_log_host {
#   network(port(601)transport("tcp"));
#   network(port(514)transport("udp"));
#};

log { source(s_network); destination(d_logs); destination(d_mongodb); };

log {
	source(s_local);
	source(s_network);
	destination(d_local);
};
